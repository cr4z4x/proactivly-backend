# docker-compose.yml
version: "3.8" # Specify the Docker Compose file format version

services:
  # PostgreSQL Service
  postgres_db:
    image: postgres:14 # Use a specific version for stability (e.g., 14, 15, 16)
    container_name: my-postgres-container
    environment:
      POSTGRES_DB: mydatabase # Name of the default database to create
      POSTGRES_USER: myuser # Username for the database
      POSTGRES_PASSWORD: mysecretpassword # Password for the user (CHANGE THIS!)
    ports:
      - "5432:5432" # Map host port 5432 to container port 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist PostgreSQL data
    healthcheck: # Healthcheck to ensure PostgreSQL is ready
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MongoDB Service
  mongo_db:
    image: mongo:6.0 # Use a specific version for stability (e.g., 6.0, 7.0)
    container_name: my-mongodb-container
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongouser # Root username for MongoDB
      MONGO_INITDB_ROOT_PASSWORD: mymongopassword # Root password for MongoDB (CHANGE THIS!)
    ports:
      - "27017:27017" # Map host port 27017 to container port 27017
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data
    healthcheck: # Healthcheck to ensure MongoDB is ready
      test: ["CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: # Define named volume for PostgreSQL
  mongodb_data: # Define named volume for MongoDB
